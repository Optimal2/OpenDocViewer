<?xml version="1.0" encoding="utf-8"?>
<!--
  OpenDocViewer — IIS web.config

  PURPOSE
    - Serve the Vite-built SPA from /dist (static hosting on IIS)
    - Provide SPA routing fallback to /index.html
    - Apply safe caching: long-cache hashed assets, but NO cache for index.html and runtime config
    - Set essential security headers appropriate for a static app
    - Provide correct MIME types for modern assets (.mjs, .wasm, .svg, .json, .woff2, .webmanifest)

  IMPORTANT
    - Keep index.html and odv.config.js uncached so deployments and config flips take effect immediately.
    - The global Cache-Control below applies to *everything else* (hashed assets) for performance.
    - If you change the trailing-slash policy, update crawler settings and any canonical URLs accordingly.

  SAFE CHANGES ONLY
    - This file includes verbose comments to help future maintainers. Comments do not affect behavior.
-->

<configuration>

  <!--
    Do NOT cache index.html.
    Single-page apps must always fetch a fresh shell to pick up new builds.
  -->
  <location path="index.html">
    <system.webServer>
      <httpProtocol>
        <customHeaders>
          <remove name="Cache-Control" />
          <add name="Cache-Control" value="no-store, no-cache, must-revalidate" />
        </customHeaders>
      </httpProtocol>
    </system.webServer>
  </location>

  <!--
    Do NOT cache runtime config.
    ops can flip feature flags (exposeStackTraces, showPerfOverlay, logEndpoint, etc.) without rebuilds.
  -->
  <location path="odv.config.js">
    <system.webServer>
      <httpProtocol>
        <customHeaders>
          <remove name="Cache-Control" />
          <add name="Cache-Control" value="no-store, no-cache, must-revalidate" />
        </customHeaders>
      </httpProtocol>
    </system.webServer>
  </location>

  <system.webServer>

    <!--
      Global headers:
        - ODV-BasePath is informational (safe to remove in production).
        - Cache-Control long-cache for all other assets (index.html and odv.config.js are overridden above).
        - Security headers (nosniff, referrer policy, basic permissions).
        - If you terminate TLS here and force HTTPS, consider enabling HSTS (commented below).
    -->
    <httpProtocol>
      <customHeaders>
        <!-- Optional informational header (remove in prod if you prefer less disclosure) -->
        <add name="ODV-BasePath" value="http://localhost:8080/OpenDocViewer/" />

        <!-- Long-cache for static assets (overridden by <location> rules above for HTML/config) -->
        <remove name="Cache-Control" />
        <add name="Cache-Control" value="public, max-age=31536000, immutable" />

        <!-- Security headers (safe defaults for a static SPA) -->
        <add name="X-Content-Type-Options" value="nosniff" />
        <add name="Referrer-Policy" value="strict-origin-when-cross-origin" />
        <add name="Permissions-Policy" value="camera=(), microphone=(), geolocation=()" />

        <!--
          Strict-Transport-Security (HSTS) — ENABLE ONLY IF ALWAYS SERVED OVER HTTPS
          <add name="Strict-Transport-Security" value="max-age=31536000; includeSubDomains; preload" />
        -->
      </customHeaders>
    </httpProtocol>

    <!--
      URL Rewrite:
        - AddTrailingSlash: canonicalize bare paths to end with '/' for cleaner relative URL handling.
          Currently a 302 Found for safety; switch to 308 Permanent Redirect once canonical URLs are stable.
        - SPA fallback: unknown routes -> /index.html (client-side routing).
    -->
    <rewrite>
      <rules>
        <clear />

        <!-- Redirect /OpenDocViewer -> /OpenDocViewer/ (only when not a file/dir and no extension) -->
        <rule name="AddTrailingSlash" stopProcessing="true">
          <match url=".*" />
          <conditions logicalGrouping="MatchAll">
            <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="true" />
            <add input="{REQUEST_FILENAME}" matchType="IsDirectory" negate="true" />
            <add input="{REQUEST_URI}" pattern=".+\..+" negate="true" />
            <add input="{REQUEST_URI}" pattern=".*/$" negate="true" />
          </conditions>
          <!-- Use redirectType="Permanent" or statusCode="308" once you are confident -->
          <action type="Redirect" url="{R:0}/" redirectType="Found" appendQueryString="true" />
        </rule>

        <!-- SPA fallback: let the client router handle deep links -->
        <rule name="SPA fallback" stopProcessing="true">
          <match url=".*" />
          <conditions logicalGrouping="MatchAll">
            <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="true" />
            <add input="{REQUEST_FILENAME}" matchType="IsDirectory" negate="true" />
          </conditions>
          <action type="Rewrite" url="index.html" />
        </rule>
      </rules>
    </rewrite>

    <!--
      MIME types:
        Include modern formats often missing on older IIS installs.
        We remove first (if present) and then add explicit, correct types.
    -->
    <staticContent>
      <!-- ES module JavaScript -->
      <remove fileExtension=".mjs" />
      <mimeMap fileExtension=".mjs" mimeType="application/javascript" />

      <!-- WebAssembly -->
      <remove fileExtension=".wasm" />
      <mimeMap fileExtension=".wasm" mimeType="application/wasm" />

      <!-- SVG -->
      <remove fileExtension=".svg" />
      <mimeMap fileExtension=".svg" mimeType="image/svg+xml" />

      <!-- JSON / sourcemaps -->
      <remove fileExtension=".json" />
      <mimeMap fileExtension=".json" mimeType="application/json" />
      <remove fileExtension=".map" />
      <mimeMap fileExtension=".map" mimeType="application/json" />

      <!-- Web App Manifest -->
      <remove fileExtension=".webmanifest" />
      <mimeMap fileExtension=".webmanifest" mimeType="application/manifest+json" />

      <!-- Fonts -->
      <remove fileExtension=".woff2" />
      <mimeMap fileExtension=".woff2" mimeType="font/woff2" />
      <remove fileExtension=".woff" />
      <mimeMap fileExtension=".woff" mimeType="font/woff" />
    </staticContent>

    <!--
      Compression:
        - Enable static & dynamic compression for text assets (JS/CSS/JSON/SVG).
        - Images like PNG/JPEG are already compressed; leave those to the client.
    -->
    <urlCompression doStaticCompression="true" />
    <httpCompression>
      <dynamicTypes>
        <add mimeType="application/javascript" enabled="true" />
        <add mimeType="text/css" enabled="true" />
        <add mimeType="application/json" enabled="true" />
      </dynamicTypes>
      <staticTypes>
        <add mimeType="application/javascript" enabled="true" />
        <add mimeType="text/css" enabled="true" />
        <add mimeType="application/json" enabled="true" />
        <add mimeType="image/svg+xml" enabled="true" />
      </staticTypes>
    </httpCompression>

  </system.webServer>
</configuration>
